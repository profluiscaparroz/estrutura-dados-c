# Makefile para BST (Binary Search Tree)
# Compila√ß√£o e testes automatizados

# Configura√ß√µes do compilador
CC = gcc
CFLAGS = -Wall -Wextra -std=c99 -pedantic
DEBUG_FLAGS = -g -DDEBUG
RELEASE_FLAGS = -O2 -DNDEBUG

# Arquivos
SOURCES = bst.c
EXECUTABLE = bst
TEST_EXECUTABLE = test_bst

# Regras principais
.PHONY: all clean debug release test help

# Compila√ß√£o padr√£o
all: $(EXECUTABLE)

$(EXECUTABLE): $(SOURCES)
	@echo "üî® Compilando BST..."
	$(CC) $(CFLAGS) -o $(EXECUTABLE) $(SOURCES)
	@echo "‚úÖ Compila√ß√£o conclu√≠da: $(EXECUTABLE)"

# Vers√£o de debug
debug: CFLAGS += $(DEBUG_FLAGS)
debug: clean $(EXECUTABLE)
	@echo "üêõ Vers√£o DEBUG compilada"

# Vers√£o otimizada
release: CFLAGS += $(RELEASE_FLAGS)
release: clean $(EXECUTABLE)
	@echo "üöÄ Vers√£o RELEASE compilada"

# Executar testes
test: $(EXECUTABLE)
	@echo "üß™ Executando testes da BST..."
	@echo "============================================"
	./$(EXECUTABLE)
	@echo "============================================"
	@echo "‚úÖ Testes conclu√≠dos"

# Executar com valgrind (se dispon√≠vel)
memcheck: $(EXECUTABLE)
	@echo "üîç Verificando mem√≥ria com Valgrind..."
	@if command -v valgrind >/dev/null 2>&1; then \
		valgrind --leak-check=full --show-leak-kinds=all ./$(EXECUTABLE); \
	else \
		echo "‚ùå Valgrind n√£o encontrado, executando normalmente..."; \
		./$(EXECUTABLE); \
	fi

# An√°lise est√°tica (se dispon√≠vel)
static-analysis:
	@echo "üìä Executando an√°lise est√°tica..."
	@if command -v cppcheck >/dev/null 2>&1; then \
		cppcheck --enable=all --std=c99 $(SOURCES); \
	else \
		echo "‚ùå cppcheck n√£o encontrado"; \
	fi

# Limpeza
clean:
	@echo "üßπ Limpando arquivos compilados..."
	rm -f $(EXECUTABLE) $(TEST_EXECUTABLE) *.o *.out
	@echo "‚úÖ Limpeza conclu√≠da"

# Informa√ß√µes sobre alvos dispon√≠veis
help:
	@echo "üìñ Alvos dispon√≠veis:"
	@echo "  all          - Compilar BST (padr√£o)"
	@echo "  debug        - Compilar vers√£o debug"
	@echo "  release      - Compilar vers√£o otimizada"
	@echo "  test         - Compilar e executar testes"
	@echo "  memcheck     - Executar com verifica√ß√£o de mem√≥ria"
	@echo "  static-analysis - Executar an√°lise est√°tica"
	@echo "  clean        - Limpar arquivos compilados"
	@echo "  help         - Mostrar esta ajuda"

# Informa√ß√µes de status
status:
	@echo "üìã Status do projeto BST:"
	@echo "  Fontes: $(SOURCES)"
	@echo "  Execut√°vel: $(EXECUTABLE)"
	@echo "  Compilador: $(CC)"
	@echo "  Flags: $(CFLAGS)"
	@if [ -f $(EXECUTABLE) ]; then \
		echo "  Status: ‚úÖ Compilado"; \
		echo "  Tamanho: $$(du -h $(EXECUTABLE) | cut -f1)"; \
	else \
		echo "  Status: ‚ùå N√£o compilado"; \
	fi